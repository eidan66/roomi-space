module.exports = {
  root: true,
  env: {
    browser: true,
    node: true,
    es2020: true,
    jasmine: true,
  },
  ignorePatterns: [
    'node_modules/',
    'dist/',
    'build/',
    '.storybook/',
    '*.config.js',
    '*.config.ts',
    '.eslintrc.js',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    project: ['./tsconfig.json'],
    tsconfigRootDir: __dirname,
  },
  plugins: [
    '@typescript-eslint',
    'react-hooks',
    'import',
    'storybook',
    'react-refresh',
    'prettier',
    'unused-imports',
  ],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react-hooks/recommended',
    'plugin:import/recommended',
    'plugin:import/typescript',
    'plugin:prettier/recommended',
    'plugin:@next/next/recommended',
  ],
  rules: {
    'import/no-cycle': [2, { maxDepth: 1 }],
    '@typescript-eslint/no-empty-object-type': 'off',
    'import/no-named-as-default-member': 'off',
    'import/no-unresolved': 'off',
    'import/default': 'off',
    'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
    'no-duplicate-imports': 'error',
    'no-confusing-arrow': 'off',
    'no-else-return': 'error',
    'no-extra-boolean-cast': 'error',
    'no-extra-semi': 'error',
    'no-console': 'off',
    '@typescript-eslint/no-explicit-any': 'warn',
    curly: 'error',
    '@typescript-eslint/no-unused-vars': 'off', // Disabled in favor of unused-imports/no-unused-vars
    'no-unused-expressions': 'off',
    '@typescript-eslint/no-unused-expressions': 'off',
    'default-case': 'warn',
    'no-nested-ternary': 'error',
    'arrow-body-style': ['error', 'as-needed'],
    'default-param-last': 'warn',
    'prefer-const': 'error',
    'no-return-await': 'error',
    'prefer-arrow-callback': 'error',
    'no-var': 'error',
    'no-undef-init': 'error',
    'no-useless-return': 'error',
    'no-return-assign': 'error',
    'import/no-named-as-default': 'off',
    'require-await': 'error',
    'no-lonely-if': 'error',
    eqeqeq: ['error', 'always'],
    'react/display-name': 'off',
    'react/react-in-jsx-scope': 'off',
    'react-refresh/only-export-components': 'off',
    'prefer-destructuring': 'off',
    'import/prefer-default-export': 'off',
    'import/no-default-export': 'off',
    'sort-imports': [
      'warn',
      {
        ignoreCase: false,
        ignoreDeclarationSort: true,
        ignoreMemberSort: false,
        memberSyntaxSortOrder: ['none', 'all', 'multiple', 'single'],
        allowSeparatedGroups: true,
      },
    ],
    'import/order': [
      'error',
      {
        'newlines-between': 'always',
        groups: [
          'builtin',
          'external',
          'internal',
          'parent',
          'sibling',
          'index',
          'unknown',
        ],
        pathGroups: [
            {
              pattern: 'react',
              group: 'external',
              position: 'before',
            },
            {
              pattern: '@/**',
              group: 'internal',
            },
          ],
          pathGroupsExcludedImportTypes: ['react'],
          alphabetize: {
            order: 'asc',
            caseInsensitive: true,
          },
      },
    ],
    'unused-imports/no-unused-imports': 'warn',
    'unused-imports/no-unused-vars': [
      'warn',
      {
        vars: 'all',
        varsIgnorePattern: '^_',
        args: 'after-used',
        argsIgnorePattern: '^_',
      },
    ],
  },
  settings: {
    react: {
      version: 'detect',
    },
    'import/resolver': {
      typescript: {
        alwaysTryTypes: true,
        project: ['./tsconfig.json'],
      },
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx', '.svg'],
        moduleDirectory: ['src/', 'node_modules'],
      },
    },
  },
  overrides: [
    {
      files: ['**/__tests__/**/*.[jt]s?(x)', '**/tests/**/*.[jt]s?(x)'],
      env: {
        jest: true,
      },
    },
  ],
}; 